Using GCOV with Mongo:

In the mongo SConstruct there was a command --gcov that we could use in order 
to compile the source with the gcov flags set. 

We first made an SConstruct file in Python in our test program in order to 
ensure that we could use the compiler in the same way. 

We used the command:
 scons --gcov --cxx=g++-4.2 --cc=gcc-4.2  
when compiling the files in the mongo directory with gcov on OSX so that scons
would use regular gcc instead of llvm-gcc. 
For linux we would be able to omit the --cxx and --cc flags.

Once everything was compiled, we started mongod and ran firstExample, 
secondExample, clientTest, and whereExample to generate some .gcda files.

We then generated html output using the following commands

	lcov -c -d build/darwin/cc_gcc-4.2/cxx_g++-4.2/gcov/ -b . -o mongodb.info
	genhtml mongodb.info -o build/html
	
Creating this file and opening the index.html file gave results that were basically a list of the different programs run and then results on the frequency of the branches taken. The only problem with this interface is that it only shows the code coverage percentages. We are not able to find any flags that can allow us to visually access the branch probability statistics we would also like to have displayed. Furthermore the source code for the LCOV program is in Perl so it is not wise to modify it. We are going to have to create our own visualizer with the statistics we want to display. This will not be too difficult because the .info file that is created gives data that we can use to visualize the different parts of GCOV. 

