Using GCOV with Mongo:

In the mongo SConstruct there was a command --gcov that we could use in order 
to compile the source with the gcov flags set. 

We first made an SConstruct file in Python in our test program in order to 
ensure that we could use the compiler in the same way. 

We used the command:
 scons --gcov --cxx=g++-4.2 --cc=gcc-4.2  
when compiling the files in the mongo directory with gcov on OSX so that scons
would use regular gcc instead of llvm-gcc. 
For linux we would be able to omit the --cxx and --cc flags.

Once everything was compiled, we started mongod and ran firstExample, 
secondExample, clientTest, and whereExample to generate some .gcda files.

We then generated html output using the following commands

	lcov -c -d build/darwin/cc_gcc-4.2/cxx_g++-4.2/gcov/ -b . -o mongodb.info
	genhtml mongodb.info -o build/html
	
Creating this file and opening the index.html file gave results that were 
basically a list of the different programs run and then results on the branch 
and function coverage. The only problem with this interface is that it only 
shows the code coverage percentages. We are not able to find any flags that can 
would allow us to see the branch probability statistics in the generated html. 

However, the information on the branch counts are present in the .info file
generated by lcov. It would therefore be possible to generate html displays of
the branch probabilities using the lcov data.

The source code for the genhtml program included with lcov is in Perl so it 
would be rather difficult to understand and modify. We plan to create our own 
html generator in Python using the data from the .info file created by lcov. 
